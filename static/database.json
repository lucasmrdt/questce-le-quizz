{
  "pfa": [
    {
      "question": "déclaration globale (constantes)",
      "answer": "let x = 4"
    },
    {
      "question": "condition",
      "answer": "if x < y then true else false"
    },
    {
      "question": "pattern matching",
      "answer": "match x with\n  | 1 -> 1\n  | x when x = 2 -> 2\n  | x::s -> 3"
    },
    {
      "question": "l'ensembles de types",
      "answer": "string, int, float, unit, bool, char, bytes, 'a list, 'a * 'b"
    },
    {
      "question": "record (ou enregistrement)",
      "answer": "type paire_dentiers = { a : int; b : int };;\n{ a=3; b=5 };;"
    },
    {
      "question": "variants ou énumération",
      "answer": "type foo = Nothing | Int of int | Pair of int * int | String of string"
    },
    {
      "question": "variants récursifs",
      "answer": "type binary_tree = Leaf of int | Tree of binary_tree * binary_tree;;"
    },
    {
      "question": "variants paramétrés",
      "answer": "type 'a binary_tree = Leaf of 'a | Tree of 'a binary_tree * 'a binary_tree"
    },
    {
      "question": "appel terminal",
      "answer": "dans une fonction f, un appel à une fonction g est dit terminal si le résultat de cet appel est le résultat de f"
    },
    {
      "question": "fonction d'ordre suppérieur",
      "answer": "fonction qui admet en argument au moins une fonction"
    },
    {
      "question": "inférence de type",
      "answer": "mécanisme qui permet à un compilateur/intrerpréteur de recherche automatiquement les types associés aux expressions"
    },
    {
      "question": "polymorphisme",
      "answer": "concept consistant à fournir une interface unique à des entités pouvant avoir des types différents"
    },
    {
      "question": "lex exceptions",
      "answer": "exception Mon_excpetion of int ;;\nraise (Mon_exception 1"
    },
    {
      "question": "résurive terminale",
      "answer": "si tous appels de f sont terminaux"
    },
    {
      "question": "Continuation Passing Style (CPS)",
      "answer": "se passe des piles d'exécutions, argument supp (continuation), se termine par l'appel de sa continuation"
    },
    {
      "question": "récursion efficace",
      "answer": "récursion terminale avec accumulateur"
    }
  ],
  "systeme": [
    {
      "question": "l'informatique",
      "answer": "science du traitement automatique de l'information",
      "un_reversible": true
    },
    {
      "question": "un ordinateur",
      "answer": "machine programmable pour traiter de l'information",
      "un_reversible": true
    },
    {
      "question": "différents composants d'un ordinateur",
      "answer": "microprocesseur(ALU, registres, code opération) / RAM / BUS / périphérique",
      "un_reversible": true
    },
    {
      "question": "CPU (Central Processing Unit)",
      "answer": "execute les instructions machine des programmes"
    },
    {
      "question": "RAM (Random Access Memory)",
      "answer": "mémoire informatique dans laquelle peuvent être enregistrées les informations traitées par appareil informatique"
    },
    {
      "question": "BUS (dérive du latin omnibus = à tous)",
      "answer": "système de transfert de données entre plusieurs unités de traitement de données par l'intermédiaire d'une voie de transmission commune (nappe de fils relie CPU, RAM et périph)"
    },
    {
      "question": "périphérique",
      "answer": "dispositif connecté à un système de traitement de l'information centrale et qui ajoute à ce dernier des fonctionnalitées"
    },
    {
      "question": "système d'exploitation (Operating System)",
      "answer": "programme (ou ensemble de programmes) qui gère la partie matérielle et sert de socle pour les appplications (intermédiaire entre applications/matériel)"
    },
    {
      "question": "traitement par lot (batch)",
      "answer": "~année 50, description des opérations de manipulation dans une fiche perforée (opérateur insère toutes les fiches en lot)"
    },
    {
      "question": "multiprogrammation",
      "answer": "~année 60, naissance de OS, gestion des priorités, mémoire partagée (plus d'adresse physique) MULTICS"
    },
    {
      "question": "temps partagé",
      "answer": "~fin année 60, alternance du lancement des programmes (gestion des interruptions, cycle de vie, synchronisation de processus/programmation concurrente) UNICS"
    },
    {
      "question": "temps réel",
      "answer": "~année 80-90, garantie de temps (executé en un temps donnée)"
    },
    {
      "question": "systèmes répartis",
      "answer": "~année 80-90, distribution des ressources entre plusieurs machines"
    },
    {
      "question": "smartphones",
      "answer": "~année 2007, problématique de gestion de l'énergie"
    },
    {
      "question": "protocole \"poignée de main\"",
      "answer": "chaque composant a un contrôleur, 2 bits de contrôle (occupé modifié par le contrôleur, commande modifié par l'OS) et un algorithme côté OS https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-22%20at%2008.28.00.png?alt=media&token=3d3ac525-c641-488d-902d-a31790ffba12"
    },
    {
      "question": "communication entre OS et logiciels/matériels",
      "answer": "interruption IRQ (Interrupt ReQuest) via quelques bits du BUS, code IRQ correspond à routine de traitement de l'OS, interruption matérielle ou logiciel (exception)"
    },
    {
      "question": "Traitement d'un IRQ (Interrupt ReQuest)",
      "answer": "priorise les interruptions, enregistre contexte du programme en cours, passe en mode superviseur, execute la routine correspondante, restaure contexte précédent et continue à executer ce dernier"
    },
    {
      "question": "mode superviseur",
      "answer": "mode dans le quel l'OS ne vérifie pas les opérations effectuées"
    },
    {
      "question": "MMU (Memory Management Unit)",
      "answer": "matériel informatique permettant la gestion des adresses virtuelles"
    },
    {
      "question": "programme d'amorçage",
      "answer": "pgrm ROM -> proc, init contrôleurs, (1) init routine -> RAM, association IRQ -> addr routine, attente IRQ mat (pour charger l'OS), IRQ mat -> charger OS, (1)"
    },
    {
      "question": "appels système",
      "answer": "ensemble des instructions qu'un processus peut envoyer à l'OS"
    },
    {
      "question": "interpréteur de commande (shell)",
      "answer": "programme en charge de l'interface avec l'utilisateur"
    },
    {
      "question": "architecture de l'OS",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-22%20at%2008.40.36.png?alt=media&token=e5272b4a-021f-4518-9b57-05c6c645b65b"
    },
    {
      "question": "programme",
      "answer": "séquence d'instructions"
    },
    {
      "question": "processeur",
      "answer": "automate électronique de traitement (peut exécuter un programme et modifie son état en fonction des instructions)"
    },
    {
      "question": "concurrence",
      "answer": "dans système moderne plusieurs processus s'exécutent en parallèle"
    },
    {
      "question": "processus",
      "answer": "programme exécuté par un processeur"
    },
    {
      "question": "structure de données d'un processus",
      "answer": "environnement (hérité du processus parent), tas (constantes, variables global, ...), pile (variable temporaires + contexte), code (segment exécutable du processus)",
      "un_reversible": true
    },
    {
      "question": "structure d'un processus",
      "answer": "code (recopie programme machine), environnement (défini par processus parent) et mémoire (pile d'appel et tas d'allocation)",
      "un_reversible": true
    },
    {
      "question": "rôle de l'OS",
      "answer": "création et suppression de processus, suspension/reprise de processus (multiprogrammation/temps partagé) et communication/synchronisation (partage de données, consistance état mémoire)",
      "un_reversible": true
    },
    {
      "question": "PCB (Process Control Block)",
      "answer": "structure de données contenant les informations relatives à un processus utilisée par l'OS pour la gestion des processus",
      "un_reversible": true
    },
    {
      "question": "différentes composant du PCB",
      "answer": "information mémoire, données d'ordonnancement, périphériques alloués, information d'usage, etat du processus + sauvegarde de l'état du processeur",
      "un_reversible": true
    },
    {
      "question": "cycle de vie d'un processus",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/process.png?alt=media&token=a59cc581-de90-4ca8-bff6-bb3c6e55938c",
      "un_reversible": true
    },
    {
      "question": "différentes raison de la suspension d'un processus",
      "answer": "demande E/S -> EA, temps expiré -> P, créé un processus fils -> P, interruption wait -> EA",
      "un_reversible": true
    },
    {
      "question": "consistance mémoire des processus",
      "answer": "mémoire (chaque processus à son propre espace mémoire), verrous (processus peut verrouiller une ressource) et algorithme de synchro",
      "un_reversible": true
    },
    {
      "question": "fonction pour création d'un processus",
      "answer": "fork: processus dupliqué\nexec: remplacement du processus par un autre\ncreateprocess = exec",
      "un_reversible": true
    },
    {
      "question": "thread",
      "answer": "unité de base du processus (partagent code, environnement, et le tas) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-22%20at%2009.02.16.png?alt=media&token=bdf088ca-f3fa-43e0-90b4-fab0710f8001"
    },
    {
      "question": "avantages des threads",
      "answer": "gain de mémoire car code partagé, réactivité processus continue à s'exécuter pendant qu'un thread est en attente et parallélisation (multi-processeur)",
      "un_reversible": true
    },
    {
      "question": "cycle de vie d'un processus",
      "answer": "prêt, en attente et en exécution"
    }
  ],
  "reseaux": [
    {
      "question": "modèle OSI (Open System Interconnection)",
      "answer": "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/OSI_Model_v1.svg/langfr-330px-OSI_Model_v1.svg.png",
      "un_reversible": true
    },
    {
      "question": "IP",
      "answer": "Internet Protocole",
      "un_reversible": true
    },
    {
      "question": "def réseau",
      "answer": "ensemble d'objets interconnectés les uns aux autres qui permet de faire circuler des éléments entre ces objets selon des règles bien définies"
    },
    {
      "question": "def réseau informatique",
      "answer": "moyens matériels et logiciels pour faire communiquer et permettre l'échange d'informations entre plusieurs équipements ou machines de manière souple et fiable"
    },
    {
      "question": "intérêt d'un réseau",
      "answer": "partager les ressource, fiabilité, réduction des coûts, scalability",
      "un_reversible": true
    },
    {
      "question": "acronyme BER",
      "answer": "Bit Error Rate"
    },
    {
      "question": "histoire",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot_2020-09-08_at_14.36.39.png?alt=media&token=20e6f0f3-c1f9-4876-bce8-885395e77016",
      "un_reversible": true
    },
    {
      "question": "signification 2g, 3g et 4g",
      "answer": "GSM (Global System for Mobile), UMTS (Universal Mobile Telecommunications System), LTE (Long Term Evolution)",
      "un_reversible": true
    },
    {
      "question": "acronyme QS",
      "answer": "Quality Service; paramètre de qualité d'un service (taux erreur, délais, débit, ...)",
      "un_reversible": true
    },
    {
      "question": "différence entre norme et standard",
      "answer": "standard de fait (ou standard): consensus sans démarche formel\nstandard de jure (ou norme): document formel adopté par instance reconnue",
      "un_reversible": true
    },
    {
      "question": "acronyme IEEE (réseaux locaux)",
      "answer": "Institute of Electrical and Electronics Engineers"
    },
    {
      "question": "acronyme ISO",
      "answer": "International Organization for Standardization",
      "un_reversible": true
    },
    {
      "question": "acronyme ITU (télécommunication)",
      "answer": "Union International des Télécomunnication",
      "un_reversible": true
    },
    {
      "question": "acronyme IETF (RFC)",
      "answer": "Internet Engineering Task Force"
    },
    {
      "question": "classification d'un réseau",
      "answer": "par type de transmission (diffusion ou point à point), par topologie physique https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot_2020-09-08_at_15.24.24.png?alt=media&token=c4317bd6-0013-4f84-9ede-8b1afc36fe79 par taille (PAN < LAN < MAN < WAN)",
      "un_reversible": true
    },
    {
      "question": "besoin d'une architecture par couches OSI (by ISO)",
      "answer": "sous-division des problèmes, communication verticale par l'intermédiaire d'interface de service et horizontale même protocole",
      "un_reversible": true
    },
    {
      "question": "primitive du modèle OSI",
      "answer": "requête, l'indication, réponse et confirmation",
      "un_reversible": true
    },
    {
      "question": "modèle OSI (7 couches)",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot_2020-09-08_at_16.43.56.png?alt=media&token=621b92e1-be64-4921-85aa-9f1792006a10",
      "un_reversible": true
    },
    {
      "question": "répéteur (OSI)",
      "answer": "1 couche (OSI)"
    },
    {
      "question": "commutateur (OSI)",
      "answer": "2 couches (OSI)"
    },
    {
      "question": "routeur (OSI)",
      "answer": "3 couches (OSI)"
    },
    {
      "question": "architecture TCP/IP (4 couches)",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot_2020-09-08_at_17.04.06.png?alt=media&token=dc86a8fb-29ee-40d5-ad7b-96cfd9ca6976",
      "un_reversible": true
    },
    {
      "question": "def bande passante ou débit de transmission",
      "answer": "intervalle de fréquence que laisse passer le support"
    },
    {
      "question": "def débit binaire",
      "answer": "vitesse de transmission (combien de bits on transmet en bit/s)"
    },
    {
      "question": "def temps de transmission $t_t$",
      "answer": "temps necessaire pour que le message soit envoyé/écrit entièrement\n$t_t = \\frac{\\text{nombre de bits à émettre}}{\\text{capacité (débit) du canal}}$"
    },
    {
      "question": "def temps de propagation $t_p$",
      "answer": "temps nécessaire au signal pour parcourir le support d'un point à l'autre"
    },
    {
      "question": "def temps de transfert $t_r$",
      "answer": "temps nécessaire pour que le message émis à travers le réseau soit reçu complètement par l'équipement terminal récepteur\n$t_r = t_t + t_p$"
    },
    {
      "question": "types de support pour l'information",
      "answer": "guide physique (ondes électrique, optiques) et sans guide physique (wireless: ondes électromagnétiques)",
      "un_reversible": true
    },
    {
      "question": "types de signaux",
      "answer": "analogique https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Untitled.png?alt=media&token=91b35eae-164f-4627-a97f-0792edb0f708 numérique https://www.notion.so/image/https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/nume%CC%81rique.png?alt=media&token=6158c54e-55d6-4ba1-9644-d39d7ddf31a8",
      "un_reversible": true
    },
    {
      "question": "amplificateur vs répéteur",
      "answer": "amplificateur amplifie aussi les erreurs et répéteur peut corriger les erreurs car les pallier sont connu",
      "un_reversible": true
    },
    {
      "question": "caractéristique d'un signal",
      "answer": "$a(t) = A*sin(2\\pi*f(t)+\\Phi)$ avec $f=1/T$ où $T$ est la période du signal ($v = \\lambda / T$) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2011.18.50.png?alt=media&token=4917d086-a434-4610-af4c-11e50f4126de",
      "un_reversible": true
    },
    {
      "question": "formule atténuation/affaiblissement du signal",
      "answer": "$A_f(dB) = 10log_{10}\\frac{P_s}{P_e}$ (avec $P_e$ puissance du signal émis et $P_s$ puissance du signal reçu)",
      "un_reversible": false
    },
    {
      "question": "les différents type de perturbations du signal",
      "answer": "atténuation/affaiblissement, distorsion du signal et bruit",
      "un_reversible": true
    },
    {
      "question": "def rapidité de modulation",
      "answer": "nombre maximum de symboles transmis par seconde. ($R=1/\\Delta$ bauds, avec $\\Delta$ l'intervalle pour coder un mot du signal en seconde)",
      "un_reversible": false
    },
    {
      "question": "def débit binaire",
      "answer": "vitesse de transmission des données (nombre maximum de symboles binaires transmis par seconde) $D = 1/T = R * r = R * log_2(q)$ bits/s avec $T$ l'intervalle de temps pour la transmission d'un bit, $r$ nombre de bits par symbole et $q$ la valence",
      "un_reversible": false
    },
    {
      "question": "def Loi de Nyquist",
      "answer": "débit théorique maximal d'un signal avec aucun bruit, $D_{max} = 2Blog_2(q) bits/s$ avec $B$ la bande passante du support et $q$ la valence",
      "un_reversible": false
    },
    {
      "question": "def Théorème de Shannon",
      "answer": "débit théorique maximal d'un canal avec bruit $D_{max} = Blog_2(1+\\frac{P_s}{P_n}) bits/s$ avec $B$ la bande passante du support, $P_s/P_n$ rapport signal sur bruit ($S/N = 10Log_10(P_s/P_n)$ dB)",
      "un_reversible": false
    },
    {
      "question": "différent types de transmissions",
      "answer": "Numérique - Numérique, Numérique - Analogique et Analogique - Numérique",
      "un_reversible": true
    },
    {
      "question": "transmission Numérique - Numérique",
      "answer": "transmission en bande de base (signal directement envoyé sur le canal)",
      "un_reversible": false
    },
    {
      "question": "Code NRZ",
      "answer": "No Return to Zero : signal binaire simplement transposé en tension (bonne resistance au bruit, perte de synchronisation des horloges avec longue suite) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2011.46.36.png?alt=media&token=011eae1f-eaf7-4fa2-8e44-6a797fa4955b",
      "un_reversible": true
    },
    {
      "question": "Code NRZI",
      "answer": "No Return to Zero, Invert on ones : transition du signal pour chaque 1 (signal sans transition si longue suite de 0) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2011.49.35.png?alt=media&token=cee0051a-76f1-433f-b2d2-231b79e61757",
      "un_reversible": true
    },
    {
      "question": "Code Biphase / Manchester",
      "answer": "provoquer un signal pour chaque bits transmis (OK avec longue séquences mais pb de repérage des fils = réception complémentaire) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2011.52.08.png?alt=media&token=e0d5766d-fa41-4131-a5b8-1c8619714f12",
      "un_reversible": true
    },
    {
      "question": "Code Biphase différentiel / Manchester différentiel",
      "answer": "présence ou absence de transition au début de l'intervalle du signal d'horloge qui réalise le codage (plus de problème par rapport à Manchester) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2011.55.06.png?alt=media&token=c6a6def1-25cb-4c30-8032-5d8584f35be4",
      "un_reversible": true
    },
    {
      "question": "Code Bipolaire simple",
      "answer": "Les 0 sont représentés par des potentiels nuls, les 1 par +V et -V en alternance (problème longue séquence de 0) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2011.56.33.png?alt=media&token=17817187-776a-4752-8c57-33e8af6c0452",
      "un_reversible": true
    },
    {
      "question": "Transmission Numérique - Analogique",
      "answer": "transmission par modulation d'une onde porteuse",
      "un_reversible": false
    },
    {
      "question": "fonctionnement modulation d'one",
      "answer": "$S_p(t) = Acos(2\\pi f_p(t)+\\Theta_p)$ avec $A$ l'amplitude, $f_p(t)$ fréquence porteuse et $\\Theta_p$ phase porteuse",
      "un_reversible": false
    },
    {
      "question": "Modulation ASK",
      "answer": "Amplitude-Shit Keying : fait varier l'amplitude (simple mais sensible au bruit)",
      "un_reversible": false
    },
    {
      "question": "Modulation FSK",
      "answer": "Fréquency-Shit Keying : fait varier la fréquence (si nombre d'états > 2 alors il y a augmentation de largeur de la bande)",
      "un_reversible": false
    },
    {
      "question": "Modulation PSK",
      "answer": "Phase-Shit Keying : fait varier la phase (BPSK binary ou QPSK quadrature) (la plus employé, répartir les états de manière régulière, vitesse de transmission plus élevé)",
      "un_reversible": false
    },
    {
      "question": "exemple modulation : ASK, FSK, PSK",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2012.19.48.png?alt=media&token=cc1549a4-c422-4262-87b0-e7e8b2a0db2e",
      "un_reversible": true
    },
    {
      "question": "choix de la modulation numérique",
      "answer": "dépend de la sensibilité au bruit, bande passante disponible, complexité de mise en oeuvre",
      "un_reversible": true
    },
    {
      "question": "Transmission Analogique - Numérique",
      "answer": "Transmission MIC (Modulation par Impulsion et Codage) ou PCM",
      "un_reversible": false
    },
    {
      "question": "intérêt de transmission analogique - numérique",
      "answer": "numérisation des données",
      "un_reversible": true
    },
    {
      "question": "différentes étapes de la numérisation",
      "answer": "échantillonnage (espace temps continu à discret), quantification (espace valeurs continues à discrètes) et codage (chaque niveau quantifié est codé de façon binaire)",
      "un_reversible": true
    },
    {
      "question": "Théorème d'échantillonnage de Shannon",
      "answer": "Si $W$ est la fréquence la plus élevée alors fréquence d'échantillonnage $f_e \\ge 2W$",
      "un_reversible": false
    },
    {
      "question": "détection d'erreurs",
      "answer": "ajoutes d'informations aux données (bits de redondance/contrôle) mais jamais à 100% fiable",
      "un_reversible": true
    },
    {
      "question": "correction d'erreurs",
      "answer": "après détection la redondance permet de corriger",
      "un_reversible": false
    },
    {
      "question": "2 grandes catégorie de code de protection des erreurs",
      "answer": "code en blocs (linéaire, cycliques?) et code en treillis (convolutifs, récursifs?)",
      "un_reversible": true
    },
    {
      "question": "def construction d'un code",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2012.59.02.png?alt=media&token=b5aeb5cb-5669-4347-b097-e38ae589de42",
      "un_reversible": true
    },
    {
      "question": "def poids de hamming",
      "answer": "nombre de bits à 1 que contient un mot",
      "un_reversible": false
    },
    {
      "question": "def distance de Hamming",
      "answer": "nombre de positions binaires qui diffèrent entre ces 2 mots $d(x,y) = \\Sigma^N_{i=1}(x_i\\oplus y_i)$ et $d_{Hamming} = \\forall x,y x \\neq y, min(d(x,y))$",
      "un_reversible": false
    },
    {
      "question": "capacité de détection/correction d'erreur d'un code",
      "answer": "avec distance $d=2k+p$, un code peut détecter $d-1$ erreurs et corriger $k+p-1$ erreurs",
      "un_reversible": false
    },
    {
      "question": "paramètre d'un code",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2013.08.33.png?alt=media&token=90176715-7b48-4f5d-bdd1-cb7bfa856e39",
      "un_reversible": true
    },
    {
      "question": "code à contrôle de parité (VRC: Vertical Redundancy Checking)",
      "answer": "capable de détecter des erreurs pair (resp. impaire) mais pas de les corriger",
      "un_reversible": false
    },
    {
      "question": "code polynomiaux ou CRS (cyclic redundancy checks)",
      "answer": "mots de n bits -> polynômes de degrés n-1, émetteur et récepteur choisissent un polynômes générateur, 2 méthodes (mult+div, div+div)",
      "un_reversible": false
    },
    {
      "question": "propriété des codes polynomiaux",
      "answer": "détecte toutes les erreurs simples, code polynomial de degré g bits détecte toutes les rafales d'erreurs de longueur <= g, probabilité de ne pas détecter les erreurs >g est très faible",
      "un_reversible": true
    },
    {
      "question": "technique de correction d'erreurs par entrelacement",
      "answer": "répartir les bits consécutifs dans des paquets différents",
      "un_reversible": false
    },
    {
      "question": "technique de correction d'erreurs par retransmission",
      "answer": "si récepteur à reçu une erreur demande un autre envoie par émetteur sinon envoie un ACK",
      "un_reversible": false
    },
    {
      "question": "def fiabilité d'un réseau",
      "answer": "pas d'erreur, pas de perte, pas de déséquencement et pas de duplication",
      "un_reversible": false
    },
    {
      "question": "liaison de données",
      "answer": "établissement de la liaison, transfert de données et libération de la liaison",
      "un_reversible": true
    },
    {
      "question": "def protocole de liaison de donées",
      "answer": "ensemble de règle permettant de gérer la liaison (règle de codage, de structuration et d'échange)",
      "un_reversible": false
    },
    {
      "question": "def trame",
      "answer": "manipulations des blocs d'éléments binaires https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-27%20at%2013.30.10.png?alt=media&token=d15c0a7e-a224-44f7-b36d-f3d6e1a50f99",
      "un_reversible": false
    },
    {
      "question": "utilité d'un délimiteur de fin de trame : fanion",
      "answer": "si erreur envoyer qu'une partie du message, taille tampon limité",
      "un_reversible": true
    },
    {
      "question": "def contrôle de flux",
      "answer": "permet d'éviter d'engorger le récepteur",
      "un_reversible": false
    },
    {
      "question": "def ACK",
      "answer": "acknowledgement : permet de signaler à l'émetteur d'envoyer la prochaine trame",
      "un_reversible": true
    },
    {
      "question": "def protocole à base de fenêtre",
      "answer": "envoie de plusieurs trames avant de recevoir les ACK",
      "un_reversible": false
    }
  ],
  "gla": [
    {
      "question": "génie logiciel",
      "answer": "ensemble des méthodes/outils pour le design, le développement, la validation, la vérification et la maintenance des systèmes informatiques"
    },
    {
      "question": "objectif génie logiciel",
      "answer": "avoir des procédure systématiques, rigoureuses let mesurables pour des logiciels de grande taille"
    },
    {
      "question": "logiciel",
      "answer": "ensemble d'entités nécessaires au fonctionnement d'un processus de traitement automatiques de l'information"
    },
    {
      "question": "spécification",
      "answer": "ensemble des critères que doivent satisfaire les fonctionnement interne d'un logiciel et ses interactions avec son environnement"
    },
    {
      "question": "problématiques du développement fin ~60",
      "answer": "délais de livraison non respectés, budgets non respectés, ne répond aux besoins du client, difficile à utiliser/maintenir/faire évoluer"
    },
    {
      "question": "raison de la mauvaise qualité des logiciels",
      "answer": "taches complexe, manque de méthodes/rigueur, mauvaise compréhension des besoins"
    },
    {
      "question": "ingénierie",
      "answer": "ensemble des fonctions allant de la conception et des études à la responsabilité de la construction et au contrôle des équipements d'une installation technique ou industrielle"
    },
    {
      "question": "critère de qualité",
      "answer": "analyse/specification des besoins, conception du logiciel, programmation, validation/vérification, livraison, maintenance"
    },
    {
      "question": "model V",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot_2020-09-21_at_18.41.14.png?alt=media&token=d4303b0f-e352-476c-9140-2f55033fce9a"
    },
    {
      "question": "développement par prototypage",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot_2020-09-21_at_18.41.31.png?alt=media&token=54240974-f782-4293-aaad-ac48dbc299e6"
    },
    {
      "question": "développement agile / extreme programming",
      "answer": "implication constante du client, programmation en binôme, dev dirigé par test, cycles de développement rapides pour réagir aux changements"
    },
    {
      "question": "méthode de validation et vérification",
      "answer": "test formel, preuve programmes et model-checking"
    },
    {
      "question": "associations",
      "answer": "relations entre les objets"
    },
    {
      "question": "aggregations",
      "answer": "référence à d'autres objets"
    },
    {
      "question": "invariants",
      "answer": "contraintes"
    },
    {
      "question": "MOAL",
      "answer": "Mathematical object-oriented UML-annotation language"
    },
    {
      "question": "apparent type",
      "answer": "static type"
    },
    {
      "question": "actual / dynamic type",
      "answer": "type in which an object was created"
    }
  ],
  "algo": [
    {
      "question": "histoire du mot algorithme",
      "answer": "Al-Khwârizmî, perse, 830, livre sur le méthodes de calcul sur les entiers/polynomes.",
      "un_reversible": true
    },
    {
      "question": "def algorithme",
      "answer": "procédé automatique et effectif de calcul permettant de résoudre un problème P(D) et qui s'arrête sur toute donnée D",
      "un_reversible": true
    },
    {
      "question": "problème de l'arrêt ou décidabilité",
      "answer": "dir si un programme p s'arrête avec avec d entré",
      "un_reversible": true
    },
    {
      "question": "racine d'une équation",
      "answer": "valeurs des inconnues tel que l'équation vaut 0"
    },
    {
      "question": "algorithme décidable, automatique et effectif",
      "answer": "s'arrête, fonctionne de lui-même et puisse faire le calcul"
    },
    {
      "question": "bit-taille d'un objet (BT)",
      "answer": "nombre de bits utilisé pour coder l'objet"
    },
    {
      "question": "complexité d'un algorithme",
      "answer": "fonction a une entrée associe le nombre d'opération X effectuées lors de l'exécution de l'algorithme sur une entrée d"
    },
    {
      "question": "fonction d'arrêt est indécidable",
      "answer": "https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/fonction-arret-indecidable.png?alt=media&token=5fc40a13-46e7-4267-bacb-40e9f7df8e0e"
    },
    {
      "question": "$f = O(g)$",
      "answer": "fonction f est majoré par g ($\\exists \\Delta, f \\le \\Delta g$)"
    },
    {
      "question": "$f = \\Omega (g)$",
      "answer": "fonction f est minoré par g ($\\exists \\Delta \\neq 0, f \\ge \\Delta g$)"
    },
    {
      "question": "$f = \\Theta(g)$",
      "answer": "fonction g est de l'ordre de grandeur de f ($f=O(g) \\land f=\\Omega (g)$)"
    },
    {
      "question": "$f \\sim g$",
      "answer": "fonction f est équivalente à g"
    },
    {
      "question": "$\\Theta(1)$",
      "answer": "algorithme constant"
    },
    {
      "question": "$\\Theta(ln(n))$",
      "answer": "algorithme logarithmique"
    },
    {
      "question": "$\\Theta(n)$",
      "answer": "algorithme linéaire"
    },
    {
      "question": "$\\Theta(n*ln(n))$",
      "answer": "algorithme quasi-linéaire"
    },
    {
      "question": "$\\Theta(n^2)$",
      "answer": "algorithme quadratique"
    },
    {
      "question": "$\\Theta(n^3)$",
      "answer": "algorithme cubique"
    },
    {
      "question": "$\\Theta(n^p)$",
      "answer": "algorithme polynomial"
    },
    {
      "question": "$\\Theta(e^n)$",
      "answer": "algorithme exponentiel (car $ln(\\Theta) = O(n^p)$)"
    },
    {
      "question": "def récursif",
      "answer": "fonctionnalité qui s'appelle elle-même (parfois indirectement)"
    },
    {
      "question": "complexité de fibonacci",
      "answer": "$2^{n/2} \\le O(fib) \\le 2^n $",
      "un_reversible": true
    },
    {
      "question": "évaluation paresseuse",
      "answer": "Si A et B, si non(A) alors on évalue pas B, donc l'ordre compte",
      "un_reversible": true
    },
    {
      "question": "def variable",
      "answer": "espace mémoire dans lequel on peut écrire et lire (qui a un type, une adresse et une valeur)"
    },
    {
      "question": "def pointeur",
      "answer": "un objet dont la valeur est l'adresse de la variable sur laquelle il pointe"
    },
    {
      "question": "def recherche dychotomique",
      "answer": "recherche d'un élément dans un tableau trier en comparant l'élement cherché par celui du milieu"
    },
    {
      "question": "initialisation d'un pointeur",
      "answer": "p ← malloc, p ← NULL, p ← q ou p ← &n"
    },
    {
      "question": "def passage de paramètre par valeur",
      "answer": "appelant envoie la valeur appelé réceptionne cette valeur et alloue et y stocke la valeur reçue"
    },
    {
      "question": "def passage de paramètre par variable (ou référence)",
      "answer": "appelant envoie l'adresse, appelé réception cette adresse et y associe sa variable à cette adresse"
    },
    {
      "question": "def paramètre in/out/inout",
      "answer": "1. in → lecture seule\n2. out → écriture uniquement\n3. inout → in et out"
    },
    {
      "question": "def expression",
      "answer": "quelque chose qui a un type (entier par exemple) à la compilation et une valeur à l'exécution"
    },
    {
      "question": "def instruction",
      "answer": "une action"
    },
    {
      "question": "def procédure",
      "answer": "prend des arguments et fait quelque chose. Pas de rendre. Répond à \"que dois-je faire ?\". p(arguments) est une instruction."
    },
    {
      "question": "def fonction",
      "answer": "lit des arguments et rend un résultat. Ne modifie pas ses arguments qui sont en IN. Elle doit tout le temps rendre. Répond à la question \"Que dois-je rendre ?\". f(arguments) est une expression."
    }
  ],
  "logique": [
    {
      "question": "logicien importants",
      "answer": "tarksi, russel, hilbert, gödel",
      "un_reversible": true
    },
    {
      "question": "def logique",
      "answer": "language de raisonnement",
      "un_reversible": false
    },
    {
      "question": "def proposition / énoncé",
      "answer": "phrase à qui ont peut attribuer un sens qui est une valeur de vérité",
      "un_reversible": false
    },
    {
      "question": "def raisonnement",
      "answer": "cheminement (déduction) qui permet de partir d'énoncés (hypothèses/axiomes) et de construire de nouveaux énoncés (conclusion/conséquence)",
      "un_reversible": false
    },
    {
      "question": "def déduction",
      "answer": "raisonnement par lequel on analyse les conséquences de quelque chose",
      "un_reversible": false
    },
    {
      "question": "def démonstration / preuve",
      "answer": "ensemble structuré d'étapes correctes de raisonnement",
      "un_reversible": false
    },
    {
      "question": "def conclusion",
      "answer": "affirmation qu'un argument cherche à prouver",
      "un_reversible": false
    },
    {
      "question": "def hypothèse",
      "answer": "énoncé déjà établi et qui constitue une base de référence dans la démonstration d'une nouvelle proposition",
      "un_reversible": false
    },
    {
      "question": "def formule",
      "answer": "décrit une propriété (vrai ou fausse), elle parle d'objets mathématiques (constantes, ...) peut être construit d'opérations",
      "un_reversible": false
    },
    {
      "question": "def arité",
      "answer": "nombre d'objet attendu par le symbole de prédicat",
      "un_reversible": false
    },
    {
      "question": "def formule atomiques",
      "answer": "notion qui peut être vraie ou fausse et que l'on ne peut pas décomposer sur une base de logique. Soit une tautologie/contradiction/prédicat",
      "un_reversible": false
    },
    {
      "question": "def prédicat",
      "answer": "assertion / énoncé qui dépend d'un ou plusieurs paramètres",
      "un_reversible": false
    },
    {
      "question": "def symbole de prédicat",
      "answer": "suite de caractère à laquelle on va pouvoir attribuer ultérieurement un sens",
      "un_reversible": false
    },
    {
      "question": "def terme",
      "answer": "étant donné un ensemble de symboles F chacun associé à une arité et ensemble V de variables, un terme t est soit une variable, soit formé d'un symbole f d'arité n et d'une suite ordonnée de n termes t1,...,tn qui sont appelés les sous-termes de t",
      "un_reversible": true
    },
    {
      "question": "def contradiction",
      "answer": "$\\bot$ = toujours faux",
      "un_reversible": false
    },
    {
      "question": "def tautologie",
      "answer": "$\\top$ = toujours vrai",
      "un_reversible": false
    },
    {
      "question": "def syntaxe",
      "answer": "étude de la façon dont les mots se combinent pour former des phrases ou des énoncés dans une langue",
      "un_reversible": false
    },
    {
      "question": "def sémantique",
      "answer": "étude du sens, de la signification des signes, notamment dans le langage",
      "un_reversible": false
    },
    {
      "question": "symbole de prédicat avec arité 0",
      "answer": "variable propositionnelle qui est soit vrai soit fausse",
      "un_reversible": false
    },
    {
      "question": "def symbole",
      "answer": "suite de caractère défini avec une arité",
      "un_reversible": false
    },
    {
      "question": "symbole d'arité 0",
      "answer": "constante",
      "un_reversible": false
    },
    {
      "question": "symbole d'arité 1",
      "answer": "symbole unaire",
      "un_reversible": false
    },
    {
      "question": "def variables d'objet",
      "answer": "symboles qui représente des objets permet de nommer un objet arbitraire ($x+1$)",
      "un_reversible": false
    },
    {
      "question": "paradoxe de Russel",
      "answer": "$y={x|x\\notin x}$",
      "un_reversible": false
    },
    {
      "question": "modus de ponens",
      "answer": "$A,\\ A\\Rightarrow B\\vdash B$",
      "un_reversible": false
    },
    {
      "question": "théorème d'incomplétude de Gödel",
      "answer": "théorème de base de l'arithmétique est nécessairement incomplète (où il existe un énoncé qui n'est n'y démontrable ni réfutable). On parle d'énoncé indécidable.",
      "un_reversible": false
    },
    {
      "question": "def syllogisme",
      "answer": "raisonnement logique mettant au moins 3 propositions (2 prémisses, 1 conclusion)",
      "un_reversible": false
    },
    {
      "question": "énoncé décidable",
      "answer": "énoncé capable d'être démontré ou sa négation dans le cadre d'une théorie",
      "un_reversible": false
    },
    {
      "question": "énoncé indécidable",
      "answer": "impossible de le déduire, ou de déduire sa négation, à partir des axiomes",
      "un_reversible": false
    },
    {
      "question": "def axiome",
      "answer": "proposition non démontré utiliser comme fondement",
      "un_reversible": false
    },
    {
      "question": "utilité de langage formel",
      "answer": "éviter les ambiguïtés",
      "un_reversible": true
    },
    {
      "question": "def conjonction",
      "answer": "$P \\land Q$",
      "un_reversible": false
    },
    {
      "question": "def disjonction",
      "answer": "$P \\lor Q$",
      "un_reversible": false
    },
    {
      "question": "quantificateur universelle, quantificateur existentielle",
      "answer": "$\\forall$ et $\\exists$",
      "un_reversible": false
    },
    {
      "question": "syntaxe de la logique par des termes (ou objets)",
      "answer": "à partir de variables ou des symboles de fonctions (arité 0 = constante, sinon fonction) https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-26%20at%2018.50.18.png?alt=media&token=82b6863a-48b5-40e0-a66f-32f8dcb68538",
      "un_reversible": false
    },
    {
      "question": "syntaxe de la logique par des formules",
      "answer": "symbole de prédicats d'arité https://firebasestorage.googleapis.com/v0/b/quiz-l3-info.appspot.com/o/Screenshot%202020-09-26%20at%2018.51.14.png?alt=media&token=4fffdcbf-dc83-4c33-a717-44bf06c2c667",
      "un_reversible": false
    },
    {
      "question": "règle de précédence des opérateurs",
      "answer": "1. $\\neg$\n2. $\\land$\n3. $\\lor$\n4. $\\implies$\n5. $\\forall \\text{ ou } \\exists$",
      "un_reversible": false
    },
    {
      "question": "def variable libre",
      "answer": "variable qui apparaît dans une formule P mais qui n'est lié à aucuu quantificateur",
      "un_reversible": false
    },
    {
      "question": "def variable liée / muette",
      "answer": "occurrence de la variable relié aux quantificateurs",
      "un_reversible": false
    },
    {
      "question": "def substitution",
      "answer": "$P[x \\leftarrow t]$ formule obtenue en remplaçant dans P les variables libres x par le terme t",
      "un_reversible": false
    },
    {
      "question": "def terme close / formules closes",
      "answer": "terme qui ne contient pas de variables / formules qui ne contient pas de variable libre",
      "un_reversible": false
    },
    {
      "question": "def modèle / interprétation",
      "answer": "explicite les objets mis en questions et les symbole de prédicat",
      "un_reversible": false
    },
    {
      "question": "def table de vérité",
      "answer": "soit une formule P qui contient les variables propositionnelles. Chaque ligne correspond à une interprétation différente et contient dans la colonne P, la valeur de la formule P dans cette interprétation",
      "un_reversible": false
    },
    {
      "question": "def formule valide",
      "answer": "formule est vraie pour toute interprétation",
      "un_reversible": false
    },
    {
      "question": "def formule satisfiable",
      "answer": "formule est vraie pour au moins un des cas",
      "un_reversible": false
    },
    {
      "question": "def formule insatisfiable",
      "answer": "formule est fausse pour toute les interprétation",
      "un_reversible": false
    }
  ]
}
